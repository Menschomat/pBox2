{
    "swagger": "2.0",
    "info": {
        "title": "pBox2 API-Docs",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/enclosure": {
            "get": {
                "description": "get string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "enclosure"
                ],
                "summary": "returns whole enclosure",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Enclosure"
                        }
                    }
                }
            }
        },
        "/{boxId}/fans/{fanId}": {
            "get": {
                "description": "get fan by box- and fan-id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fan"
                ],
                "summary": "returns fan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Box ID",
                        "name": "boxId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fan ID",
                        "name": "fanId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Fan"
                        }
                    }
                }
            },
            "post": {
                "description": "get fan by box- and fan-id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fan"
                ],
                "summary": "updates fan",
                "parameters": [
                    {
                        "description": "body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Fan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Fan"
                        }
                    }
                }
            }
        },
        "/{boxId}/lights/{lightId}": {
            "get": {
                "description": "get light by box- and light-id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "light"
                ],
                "summary": "returns light",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Box ID",
                        "name": "boxId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Light ID",
                        "name": "lightId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Light"
                        }
                    }
                }
            },
            "post": {
                "description": "get light by box- and light-id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "light"
                ],
                "summary": "updates light",
                "parameters": [
                    {
                        "description": "body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Light"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Light"
                        }
                    }
                }
            }
        },
        "/{boxId}/sensors/{sensorId}": {
            "get": {
                "description": "get sensor by box- and sensor-id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sensor"
                ],
                "summary": "returns sensor",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Box ID",
                        "name": "boxId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sensor ID",
                        "name": "sensorId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Sensor"
                        }
                    }
                }
            }
        },
        "/{boxId}/sensors/{sensorId}/data": {
            "get": {
                "description": "get sensor-data as time-series by box- and sensor-id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sensor"
                ],
                "summary": "returns sensor-data as time-series",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Box ID",
                        "name": "boxId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sensor ID",
                        "name": "sensorId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TimeSeries"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Box": {
            "type": "object",
            "properties": {
                "fans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Fan"
                    }
                },
                "id": {
                    "type": "string"
                },
                "lights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Light"
                    }
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sensors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Sensor"
                    }
                }
            }
        },
        "model.Enclosure": {
            "type": "object",
            "properties": {
                "boxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Box"
                    }
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Fan": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Light": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "boolean"
                },
                "type": {
                    "$ref": "#/definitions/model.LightType"
                }
            }
        },
        "model.LightType": {
            "type": "string",
            "enum": [
                "MONO"
            ],
            "x-enum-varnames": [
                "MONO"
            ]
        },
        "model.Sensor": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pin": {
                    "type": "integer"
                },
                "target": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/model.SensorType"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "model.SensorType": {
            "type": "string",
            "enum": [
                "TEMP"
            ],
            "x-enum-varnames": [
                "TEMP"
            ]
        },
        "model.TimeSeries": {
            "type": "object",
            "properties": {
                "times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        }
    }
}